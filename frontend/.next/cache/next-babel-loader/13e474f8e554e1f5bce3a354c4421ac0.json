{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nexport default function useForm(initial = {}) {\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState(initial);\n\n  const handleChange = e => {\n    let {\n      value,\n      name,\n      type\n    } = e.target;\n    console.log(type);\n\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n\n    if (type === 'file') {\n      value[0] = e.target.files;\n    }\n\n    setInputs(_objectSpread(_objectSpread({}, inputs), {}, {\n      [name]: value\n    }));\n  };\n\n  const resetForm = () => {\n    setInputs(initial);\n  };\n\n  return {\n    inputs,\n    handleChange,\n    resetForm\n  };\n}","map":{"version":3,"sources":["C:/Users/neman/Desktop/projects/sick-fits-store/frontend/lib/useForm.js"],"names":["useState","useEffect","useForm","initial","inputs","setInputs","handleChange","e","value","name","type","target","console","log","parseInt","files","resetForm"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,OAAT,CAAiBC,OAAO,GAAG,EAA3B,EAA+B;AAC5C,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAACG,OAAD,CAApC;;AAEA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAI;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAAwBH,CAAC,CAACI,MAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,QAAIA,IAAI,KAAK,QAAb,EAAuB;AACrBF,MAAAA,KAAK,GAAGM,QAAQ,CAACN,KAAD,CAAhB;AACD;;AACD,QAAIE,IAAI,KAAK,MAAb,EAAqB;AACnBF,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAWD,CAAC,CAACI,MAAF,CAASI,KAApB;AACD;;AACDV,IAAAA,SAAS,iCACJD,MADI;AAEP,OAACK,IAAD,GAAQD;AAFD,OAAT;AAID,GAbD;;AAeA,QAAMQ,SAAS,GAAG,MAAM;AACtBX,IAAAA,SAAS,CAACF,OAAD,CAAT;AACD,GAFD;;AAGA,SAAO;AACLC,IAAAA,MADK;AAELE,IAAAA,YAFK;AAGLU,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default function useForm(initial = {}) {\r\n  const [inputs, setInputs] = useState(initial);\r\n\r\n  const handleChange = (e) => {\r\n    let { value, name, type } = e.target;\r\n    console.log(type);\r\n    if (type === 'number') {\r\n      value = parseInt(value);\r\n    }\r\n    if (type === 'file') {\r\n      value[0] = e.target.files;\r\n    }\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setInputs(initial);\r\n  };\r\n  return {\r\n    inputs,\r\n    handleChange,\r\n    resetForm,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}