{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\neman\\\\Desktop\\\\projects\\\\sick-fits-store\\\\frontend\\\\components\\\\Products.js\";\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { useQuery } from '@apollo/client';\nimport Product from './Product';\nconst ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY {\n    allProducts {\n      id\n      name\n      price\n      description\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nconst ProductsListStyled = styled.div.withConfig({\n  displayName: \"Products__ProductsListStyled\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr;grid-gap:60px;\"]);\n\nconst Products = () => {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY);\n  console.log(data, error, loading);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsListStyled, {\n      children: data === null || data === void 0 ? void 0 : data.allProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Products;","map":{"version":3,"sources":["C:/Users/neman/Desktop/projects/sick-fits-store/frontend/components/Products.js"],"names":["gql","styled","useQuery","Product","ALL_PRODUCTS_QUERY","ProductsListStyled","div","Products","data","error","loading","console","log","allProducts","map","product","id"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,kBAAkB,GAAGJ,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,MAAMK,kBAAkB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,iEAAxB;;AAMA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BR,QAAQ,CAACE,kBAAD,CAAzC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,KAAlB,EAAyBC,OAAzB;AACA,sBACE;AAAA,2BACE,QAAC,kBAAD;AAAA,gBACGF,IADH,aACGA,IADH,uBACGA,IAAI,CAAEK,WAAN,CAAkBC,GAAlB,CAAuBC,OAAD,iBACrB,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEA;AAAlB,SAAgCA,OAAO,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZD;;AAcA,eAAeT,QAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport styled from 'styled-components';\r\nimport { useQuery } from '@apollo/client';\r\nimport Product from './Product';\r\n\r\nconst ALL_PRODUCTS_QUERY = gql`\r\n  query ALL_PRODUCTS_QUERY {\r\n    allProducts {\r\n      id\r\n      name\r\n      price\r\n      description\r\n      photo {\r\n        id\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProductsListStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 60px;\r\n`;\r\n\r\nconst Products = () => {\r\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY);\r\n  console.log(data, error, loading);\r\n  return (\r\n    <div>\r\n      <ProductsListStyled>\r\n        {data?.allProducts.map((product) => (\r\n          <Product product={product} key={product.id} />\r\n        ))}\r\n      </ProductsListStyled>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"]},"metadata":{},"sourceType":"module"}