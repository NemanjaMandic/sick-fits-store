{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\neman\\\\Desktop\\\\projects\\\\sick-fits-store\\\\frontend\\\\components\\\\SingleProduct.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport ErrorMessage from './ErrorMessage';\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      name\n      price\n      description\n    }\n  }\n`;\n\nconst SingleProduct = ({\n  id\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id\n    }\n  });\n  const {\n    Product\n  } = data;\n  {\n    loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n  {\n    error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this);\n  }\n  console.log({\n    data,\n    loading,\n    error,\n    Product\n  });\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: Product.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\nexport default SingleProduct;","map":{"version":3,"sources":["C:/Users/neman/Desktop/projects/sick-fits-store/frontend/components/SingleProduct.js"],"names":["gql","useQuery","ErrorMessage","SINGLE_ITEM_QUERY","SingleProduct","id","data","loading","error","variables","Product","console","log","name"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,iBAAiB,GAAGH,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMI,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAChC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACE,iBAAD,EAAoB;AAC3DM,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AADgD,GAApB,CAAzC;AAIA,QAAM;AAAEK,IAAAA;AAAF,MAAcJ,IAApB;AACA;AACEC,IAAAA,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;AACD;AACEC,IAAAA,KAAK,iBAAI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YAAT;AACD;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEN,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBE,IAAAA;AAAxB,GAAZ;AACA,sBAAO;AAAA,cAAKA,OAAO,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAdD;;AAgBA,eAAeT,aAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/client';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n  query SINGLE_ITEM_QUERY($id: ID!) {\r\n    Product(where: { id: $id }) {\r\n      name\r\n      price\r\n      description\r\n    }\r\n  }\r\n`;\r\n\r\nconst SingleProduct = ({ id }) => {\r\n  const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\r\n    variables: { id },\r\n  });\r\n\r\n  const { Product } = data;\r\n  {\r\n    loading && <p>Loading...</p>;\r\n  }\r\n  {\r\n    error && <ErrorMessage error={error} />;\r\n  }\r\n  console.log({ data, loading, error, Product });\r\n  return <h2>{Product.name}</h2>;\r\n};\r\n\r\nexport default SingleProduct;\r\n"]},"metadata":{},"sourceType":"module"}