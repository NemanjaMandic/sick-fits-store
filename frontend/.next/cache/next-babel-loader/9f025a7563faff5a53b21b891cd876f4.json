{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/neman/Desktop/projects/sick-fits-store/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/neman/Desktop/projects/sick-fits-store/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/neman/Desktop/projects/sick-fits-store/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/neman/Desktop/projects/sick-fits-store/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\neman\\\\Desktop\\\\projects\\\\sick-fits-store\\\\frontend\\\\components\\\\UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PRODUCT_MUTATION(\\n    $id: ID!\\n    $name: String\\n    $description: String\\n    $price: Int\\n  ) {\\n    updateProduct(\\n      id: $id\\n      data: { name: $name, description: $description, price: $price }\\n    ) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ITEM_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      name\\n      price\\n      description\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nimport useForm from '../lib/useForm';\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useForm = useForm(data === null || data === void 0 ? void 0 : data.Product),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm; // useEffect(() => {\n  //   if (inputs) {\n  //     setUpdateInputs(inputs);\n  //   }\n  // }, [inputs]);\n\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      productData = _useMutation2$.data,\n      productLoading = _useMutation2$.loading,\n      productError = _useMutation2$.error; // const { name, price, description } = data?.Product;\n\n\n  console.log('laaaaa', inputs);\n\n  var handleUpdateProduct = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return updateProduct({\n                variables: {\n                  id: inputs.id,\n                  name: inputs.name,\n                  price: inputs.price,\n                  description: inputs.description\n                }\n              })[\"catch\"](function (err) {\n                return console.error(err);\n              });\n\n            case 3:\n              res = _context.sent;\n              console.log('rez', res);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUpdateProduct(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleUpdateProduct,\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error || productError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: productLoading,\n      \"aria-busy\": productLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: inputs === null || inputs === void 0 ? void 0 : inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          value: inputs === null || inputs === void 0 ? void 0 : inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: inputs === null || inputs === void 0 ? void 0 : inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+ Edit product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateProduct, \"JcWAKXHLbmCRfN3Bj09ARtZKYvQ=\", false, function () {\n  return [useQuery, useForm, useMutation];\n});\n\n_c = UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["C:/Users/neman/Desktop/projects/sick-fits-store/frontend/components/UpdateProduct.js"],"names":["React","useEffect","useState","gql","useQuery","useMutation","Form","ErrorMessage","useForm","SINGLE_ITEM_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","loading","error","Product","inputs","handleChange","clearForm","resetForm","updateProduct","productData","productLoading","productError","console","log","handleUpdateProduct","e","preventDefault","name","price","description","err","res"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport Form from './styles/Form';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport useForm from '../lib/useForm';\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n  query SINGLE_ITEM_QUERY($id: ID!) {\r\n    Product(where: { id: $id }) {\r\n      name\r\n      price\r\n      description\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n  mutation UPDATE_PRODUCT_MUTATION(\r\n    $id: ID!\r\n    $name: String\r\n    $description: String\r\n    $price: Int\r\n  ) {\r\n    updateProduct(\r\n      id: $id\r\n      data: { name: $name, description: $description, price: $price }\r\n    ) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function UpdateProduct({ id }) {\r\n  const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\r\n    variables: { id },\r\n  });\r\n\r\n  const { inputs, handleChange, clearForm, resetForm } = useForm(data?.Product);\r\n\r\n  // useEffect(() => {\r\n  //   if (inputs) {\r\n  //     setUpdateInputs(inputs);\r\n  //   }\r\n  // }, [inputs]);\r\n\r\n  const [\r\n    updateProduct,\r\n    { data: productData, loading: productLoading, error: productError },\r\n  ] = useMutation(UPDATE_PRODUCT_MUTATION);\r\n  // const { name, price, description } = data?.Product;\r\n\r\n  console.log('laaaaa', inputs);\r\n\r\n  const handleUpdateProduct = async (e) => {\r\n    e.preventDefault();\r\n    const res = await updateProduct({\r\n      variables: {\r\n        id: inputs.id,\r\n        name: inputs.name,\r\n        price: inputs.price,\r\n        description: inputs.description,\r\n      },\r\n    }).catch((err) => console.error(err));\r\n    console.log('rez', res);\r\n  };\r\n  if (loading) return <h4>Loading...</h4>;\r\n  return (\r\n    <Form onSubmit={handleUpdateProduct}>\r\n      <ErrorMessage error={error || productError} />\r\n      <fieldset disabled={productLoading} aria-busy={productLoading}>\r\n        <label htmlFor='name'>\r\n          Name\r\n          <input\r\n            type='text'\r\n            id='name'\r\n            name='name'\r\n            value={inputs?.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor='price'>\r\n          Price\r\n          <input\r\n            type='number'\r\n            id='price'\r\n            name='price'\r\n            value={inputs?.price}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor='description'>\r\n          Description\r\n          <textarea\r\n            id='description'\r\n            name='description'\r\n            value={inputs?.description}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n        </label>\r\n        <button type='submit'>+ Edit product</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}