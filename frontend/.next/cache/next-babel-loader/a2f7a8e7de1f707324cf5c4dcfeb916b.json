{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\neman\\\\Desktop\\\\projects\\\\sick-fits-store\\\\frontend\\\\components\\\\UpdateProduct.js\";\nimport React, { useEffect, useState } from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nimport useForm from '../lib/useForm';\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      name\n      price\n      description\n      id\n    }\n  }\n`;\nconst UPDATE_PRODUCT_MUTATION = gql`\n  mutation UPDATE_PRODUCT_MUTATION(\n    $id: ID!\n    $name: String\n    $description: String\n    $price: Int\n  ) {\n    updateProduct(\n      id: $id\n      data: { name: $name, description: $description, price: $price }\n    ) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id\n    }\n  });\n\n  if (!loading && !error) {}\n\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm(data === null || data === void 0 ? void 0 : data.Product); // useEffect(() => {\n  //   if (inputs) {\n  //     setUpdateInputs(inputs);\n  //   }\n  // }, [inputs]);\n\n  const [updateProduct, {\n    data: productData,\n    loading: productLoading,\n    error: productError\n  }] = useMutation(UPDATE_PRODUCT_MUTATION); // const { name, price, description } = data?.Product;\n\n  console.log('laaaaa', inputs);\n\n  const handleUpdateProduct = async e => {\n    e.preventDefault();\n    const res = await updateProduct({\n      variables: {\n        id: inputs.id,\n        name: inputs.name,\n        price: inputs.price,\n        description: inputs.description\n      }\n    }).catch(err => console.error(err));\n    console.log('rez', res);\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleUpdateProduct,\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error || productError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: productLoading,\n      \"aria-busy\": productLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: inputs === null || inputs === void 0 ? void 0 : inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          value: inputs === null || inputs === void 0 ? void 0 : inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: inputs === null || inputs === void 0 ? void 0 : inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+ Edit product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/neman/Desktop/projects/sick-fits-store/frontend/components/UpdateProduct.js"],"names":["React","useEffect","useState","gql","useQuery","useMutation","Form","ErrorMessage","useForm","SINGLE_ITEM_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","data","loading","error","variables","inputs","handleChange","clearForm","resetForm","Product","updateProduct","productData","productLoading","productError","console","log","handleUpdateProduct","e","preventDefault","res","name","price","description","catch","err"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport Form from './styles/Form';\r\nimport ErrorMessage from './ErrorMessage';\r\nimport useForm from '../lib/useForm';\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n  query SINGLE_ITEM_QUERY($id: ID!) {\r\n    Product(where: { id: $id }) {\r\n      name\r\n      price\r\n      description\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n  mutation UPDATE_PRODUCT_MUTATION(\r\n    $id: ID!\r\n    $name: String\r\n    $description: String\r\n    $price: Int\r\n  ) {\r\n    updateProduct(\r\n      id: $id\r\n      data: { name: $name, description: $description, price: $price }\r\n    ) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function UpdateProduct({ id }) {\r\n  const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\r\n    variables: { id },\r\n  });\r\n\r\n  if (!loading && !error) {\r\n  }\r\n\r\n  const { inputs, handleChange, clearForm, resetForm } = useForm(data?.Product);\r\n\r\n  // useEffect(() => {\r\n  //   if (inputs) {\r\n  //     setUpdateInputs(inputs);\r\n  //   }\r\n  // }, [inputs]);\r\n\r\n  const [\r\n    updateProduct,\r\n    { data: productData, loading: productLoading, error: productError },\r\n  ] = useMutation(UPDATE_PRODUCT_MUTATION);\r\n  // const { name, price, description } = data?.Product;\r\n\r\n  console.log('laaaaa', inputs);\r\n\r\n  const handleUpdateProduct = async (e) => {\r\n    e.preventDefault();\r\n    const res = await updateProduct({\r\n      variables: {\r\n        id: inputs.id,\r\n        name: inputs.name,\r\n        price: inputs.price,\r\n        description: inputs.description,\r\n      },\r\n    }).catch((err) => console.error(err));\r\n    console.log('rez', res);\r\n  };\r\n  if (loading) return <h4>Loading...</h4>;\r\n  return (\r\n    <Form onSubmit={handleUpdateProduct}>\r\n      <ErrorMessage error={error || productError} />\r\n      <fieldset disabled={productLoading} aria-busy={productLoading}>\r\n        <label htmlFor='name'>\r\n          Name\r\n          <input\r\n            type='text'\r\n            id='name'\r\n            name='name'\r\n            value={inputs?.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor='price'>\r\n          Price\r\n          <input\r\n            type='number'\r\n            id='price'\r\n            name='price'\r\n            value={inputs?.price}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor='description'>\r\n          Description\r\n          <textarea\r\n            id='description'\r\n            name='description'\r\n            value={inputs?.description}\r\n            onChange={handleChange}\r\n          ></textarea>\r\n        </label>\r\n        <button type='submit'>+ Edit product</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}