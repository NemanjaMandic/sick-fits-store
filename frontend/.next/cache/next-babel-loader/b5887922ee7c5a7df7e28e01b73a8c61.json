{"ast":null,"code":"import _slicedToArray from \"C:/Users/neman/Desktop/projects/sick-fits-store/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/Users/neman/Desktop/projects/sick-fits-store/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\neman\\\\Desktop\\\\projects\\\\sick-fits-store\\\\frontend\\\\components\\\\UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PRODUCT_MUTATION(\\n    $id: ID!\\n    $name: String\\n    $description: String\\n    $price: Int\\n  ) {\\n    updateProduct(\\n      id: $id\\n      data: { id: $id, name: $name, description: $description, price: $price }\\n    ) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ITEM_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      name\\n      price\\n      description\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport ErrorMessage from './ErrorMessage';\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id: id\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      productData = _useMutation2$.data,\n      productLoading = _useMutation2$.loading,\n      productError = _useMutation2$.error;\n\n  var _data$Product = data.Product,\n      name = _data$Product.name,\n      price = _data$Product.price,\n      description = _data$Product.description;\n  console.log('laaaaa', {\n    name: name,\n    price: price,\n    description: description\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: updateProduct,\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error || productError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: productLoading,\n      \"aria-busy\": productLoading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: 'inputs.name',\n          onChange: function onChange() {\n            return console.log('dsa');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          value: 'inputs.price',\n          onChange: function onChange() {\n            return console.log('dsa');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: 'inputs.description',\n          onChange: function onChange() {\n            return console.log('dsa');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+ Add product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateProduct, \"hrinBQepZ7N7kThe2IR0EINW4OI=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["C:/Users/neman/Desktop/projects/sick-fits-store/frontend/components/UpdateProduct.js"],"names":["React","gql","useQuery","useMutation","Form","ErrorMessage","SINGLE_ITEM_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","loading","error","updateProduct","productData","productLoading","productError","Product","name","price","description","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,iBAAiB,GAAGL,GAAH,mBAAvB;AAWA,IAAMM,uBAAuB,GAAGN,GAAH,oBAA7B;AAmBA,eAAe,SAASO,aAAT,OAA+B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACXP,QAAQ,CAACI,iBAAD,EAAoB;AAC3DI,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AADgD,GAApB,CADG;AAAA,MACpCE,IADoC,aACpCA,IADoC;AAAA,MAC9BC,OAD8B,aAC9BA,OAD8B;AAAA,MACrBC,KADqB,aACrBA,KADqB;;AAAA,qBAQxCV,WAAW,CAACI,uBAAD,EAA0B;AACvCG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AAD4B,GAA1B,CAR6B;AAAA;AAAA,MAM1CK,aAN0C;AAAA;AAAA,MAOlCC,WAPkC,kBAOxCJ,IAPwC;AAAA,MAOZK,cAPY,kBAOrBJ,OAPqB;AAAA,MAOWK,YAPX,kBAOIJ,KAPJ;;AAAA,sBAWPF,IAAI,CAACO,OAXE;AAAA,MAWpCC,IAXoC,iBAWpCA,IAXoC;AAAA,MAW9BC,KAX8B,iBAW9BA,KAX8B;AAAA,MAWvBC,WAXuB,iBAWvBA,WAXuB;AAY5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB;AAAEJ,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,KAAK,EAALA,KAAR;AAAeC,IAAAA,WAAW,EAAXA;AAAf,GAAtB;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEP,aAAhB;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAED,KAAK,IAAII;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAU,MAAA,QAAQ,EAAED,cAApB;AAAoC,mBAAWA,cAA/C;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,wCAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAE,aAJT;AAKE,UAAA,QAAQ,EAAE;AAAA,mBAAMM,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,KAAK,EAAE,cAJT;AAKE,UAAA,QAAQ,EAAE;AAAA,mBAAMD,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA,+CAEE;AACE,UAAA,EAAE,EAAC,aADL;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,KAAK,EAAE,oBAHT;AAIE,UAAA,QAAQ,EAAE;AAAA,mBAAMD,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAN;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eA8BE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAlDuBf,a;UACWN,Q,EAO7BC,W;;;KARkBK,a","sourcesContent":["import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport Form from './styles/Form';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n  query SINGLE_ITEM_QUERY($id: ID!) {\r\n    Product(where: { id: $id }) {\r\n      name\r\n      price\r\n      description\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n  mutation UPDATE_PRODUCT_MUTATION(\r\n    $id: ID!\r\n    $name: String\r\n    $description: String\r\n    $price: Int\r\n  ) {\r\n    updateProduct(\r\n      id: $id\r\n      data: { id: $id, name: $name, description: $description, price: $price }\r\n    ) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function UpdateProduct({ id }) {\r\n  const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\r\n    variables: { id },\r\n  });\r\n\r\n  const [\r\n    updateProduct,\r\n    { data: productData, loading: productLoading, error: productError },\r\n  ] = useMutation(UPDATE_PRODUCT_MUTATION, {\r\n    variables: { id },\r\n  });\r\n  const { name, price, description } = data.Product;\r\n  console.log('laaaaa', { name, price, description });\r\n  return (\r\n    <Form onSubmit={updateProduct}>\r\n      <ErrorMessage error={error || productError} />\r\n      <fieldset disabled={productLoading} aria-busy={productLoading}>\r\n        <label htmlFor='name'>\r\n          Name\r\n          <input\r\n            type='text'\r\n            id='name'\r\n            name='name'\r\n            value={'inputs.name'}\r\n            onChange={() => console.log('dsa')}\r\n          />\r\n        </label>\r\n        <label htmlFor='price'>\r\n          Price\r\n          <input\r\n            type='number'\r\n            id='price'\r\n            name='price'\r\n            value={'inputs.price'}\r\n            onChange={() => console.log('dsa')}\r\n          />\r\n        </label>\r\n        <label htmlFor='description'>\r\n          Description\r\n          <textarea\r\n            id='description'\r\n            name='description'\r\n            value={'inputs.description'}\r\n            onChange={() => console.log('dsa')}\r\n          ></textarea>\r\n        </label>\r\n        <button type='submit'>+ Add product</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}